plugins {
    id 'org.springframework.boot' version '2.4.3'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id "com.netflix.dgs.codegen" version "4.0.10"
    id 'java'
}

group = 'org.craftedsw.kirin.api'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation "com.netflix.graphql.dgs:graphql-dgs-spring-boot-starter:latest.release"
    implementation group: 'com.github.javafaker', name: 'javafaker', version: '1.0.2'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

generateJava {
    schemaPaths = ["${projectDir}/src/main/resources/schema"] // List of directories containing schema files
    packageName = 'org.craftedsw.kirin.api.graphql.schema' // The package name to use to generate sources
    generateClient = true // Enable generating the type safe query API
}

test {
    useJUnitPlatform()
}
